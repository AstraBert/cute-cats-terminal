name: Version Bump and Release - Changeset

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "ts/cute_cats_terminal/.nvmrc"

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Add auth token to .npmrc file
        run: |
          cat << EOF >> ".npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF

          echo "new version" > version.txt
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get changeset status
        id: get-changeset-status
        run: |
          pnpm changeset status --output .changeset/status.json
          new_package=$(jq -r '.changesets[0].releases[0].name' < .changeset/status.json)
          new_package1=$(jq -r '.changesets[0].releases[1].name' < .changeset/status.json)
          rm -v .changeset/status.json

          if [[ $new_package1 == "null" ]]; then
            echo "new_package=${new_package}" >> "$GITHUB_OUTPUT"
            echo "package_count=1" >> "$GITHUB_OUTPUT"
          else
            echo "new_package=${new_package} and ${new_package1}" >> "$GITHUB_OUTPUT"
            echo "package_count=2" >> "$GITHUB_OUTPUT"
          fi

          # Set individual package flags for conditional logic
          if [[ $new_package == "@llama_cloud_services/py" ]] || [[ $new_package1 == "@llama_cloud_services/py" ]]; then
            echo "has_py_package=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_py_package=false" >> "$GITHUB_OUTPUT"
          fi

          if [[ $new_package == "llama-cloud-services" ]] || [[ $new_package1 == "llama-cloud-services" ]]; then
            echo "has_ts_package=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_ts_package=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          commit: Releasing ${{ steps.get-changeset-status.outputs.new_package }}
          title: Releasing ${{ steps.get-changeset-status.outputs.new_package }}
          # Conditional version and publish commands based on packages
          version: |
            ${{
              (steps.get-changeset-status.outputs.has_py_package == 'true' && steps.get-changeset-status.outputs.has_ts_package == 'true' && 'pnpm version') ||
              (steps.get-changeset-status.outputs.has_py_package == 'true' && steps.get-changeset-status.outputs.has_ts_package == 'false' && 'pnpm version-py') ||
              (steps.get-changeset-status.outputs.has_py_package == 'false' && steps.get-changeset-status.outputs.has_ts_package == 'true' && 'pnpm version-ts') ||
              'pnpm version'
            }}
          publish: |
            ${{
              (steps.get-changeset-status.outputs.has_py_package == 'true' && steps.get-changeset-status.outputs.has_ts_package == 'true' && 'pnpm release') ||
              (steps.get-changeset-status.outputs.has_py_package == 'true' && steps.get-changeset-status.outputs.has_ts_package == 'false' && 'pnpm release-py') ||
              (steps.get-changeset-status.outputs.has_py_package == 'false' && steps.get-changeset-status.outputs.has_ts_package == 'true' && 'pnpm release-ts') ||
              'pnpm release'
            }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
