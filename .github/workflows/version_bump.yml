name: Version Bump - Changeset

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  version:
    name: Version Bump
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          # Need to fetch full history for changesets
          fetch-depth: 0

      - uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "ts/cute_cats_terminal/.nvmrc"

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Version packages based on changesets
        run: |
          pnpm changeset status --output .changeset/status.json
          new_package=$(jq -r '.changesets[0].releases[0].name' < .changeset/status.json)
          new_package1=$(jq -r '.changesets[0].releases[1].name' < .changeset/status.json)
          rm -v .changeset/status.json

          # Determine which packages are being released
          has_py_package=false
          has_ts_package=false

          if [[ $new_package == "@llama_cloud_services/py" ]] || [[ $new_package1 == "@llama_cloud_services/py" ]]; then
            has_py_package=true
          fi

          if [[ $new_package == "llama-cloud-services" ]] || [[ $new_package1 == "llama-cloud-services" ]]; then
            has_ts_package=true
          fi

          # Execute the appropriate version command
          if [[ $has_py_package == "true" && $has_ts_package == "true" ]]; then
            echo "Versioning both Python and TypeScript packages"
            pnpm version
          elif [[ $has_py_package == "true" && $has_ts_package == "false" ]]; then
            echo "Versioning Python package only"
            pnpm version-py
          elif [[ $has_py_package == "false" && $has_ts_package == "true" ]]; then
            echo "Versioning TypeScript package only"
            pnpm version-ts
          else
            echo "Versioning with default command"
            pnpm version
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
